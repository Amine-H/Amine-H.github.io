{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/make-a-chatbot-that-speaks-like-you","result":{"data":{"markdownRemark":{"id":"12ddcfda-2e62-5e56-8081-3298eae4be71","html":"<p>If you’re a <a href=\"https://www.imdb.com/title/tt2575988/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Silicon Valley</a> fan like me I am sure you’ve seen the episode where Gylfoyle made an chatbot and made it chat with Dinesh all day without the latter even realising it untill later that day.</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube.com/embed/Y1gFSENorEY?start=6\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>Alright, let’s make you a chatbot, but before we jump into this, we’ll need:</p>\n<ul>\n<li>Data? well, you gotta feed your AI, it doesn’t work for free</li>\n<li>Chatbot? we’ll need a conversational dialog engine</li>\n</ul>\n<h2 id=\"data\" style=\"position:relative;\"><a href=\"#data\" aria-label=\"data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data</h2>\n<p>To provide the bot with the data it needs we’ll need some data, or in this case your texts.\nThe first idea that popped into my head is of course facebook, because <code class=\"language-text\">(1)</code> that’s where I can find all the text I’ll need, and <code class=\"language-text\">(2)</code> we can export the data in an easily exploitable format, in this case it’s <code class=\"language-text\">JSON</code>.</p>\n<p><strong>Make sure not to share your data or the trained model</strong> with anyone as it might contain sensitive information, you could however fix that with a De-identifier such as Google Cloud’s <a href=\"https://cloud.google.com/dlp/docs/deidentify-sensitive-data\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">DLP</code></a>.</p>\n<h3 id=\"export-messages-from-facebook\" style=\"position:relative;\"><a href=\"#export-messages-from-facebook\" aria-label=\"export messages from facebook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export messages from facebook</h3>\n<p>To export your messages from facebook if you haven’t already follow these steps:</p>\n<ul>\n<li>go to <a href=\"https://web.facebook.com/settings\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Settings</code></a></li>\n<li>click on <a href=\"https://web.facebook.com/settings?tab=your_facebook_information\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Your Facebook Information</code></a></li>\n<li>navigate to <code class=\"language-text\">Download Your Information</code></li>\n<li>select <code class=\"language-text\">JSON</code> in the <code class=\"language-text\">Format</code> select box</li>\n<li>click on <code class=\"language-text\">Deselect All</code> and click <code class=\"language-text\">Messages</code> under the <code class=\"language-text\">Your Information</code> section</li>\n<li>click on <code class=\"language-text\">Create File</code></li>\n</ul>\n<p>This could take a while, all you gotta do right now is wait for an email that says that your data is ready for download.</p>\n<h3 id=\"preparing-the-data\" style=\"position:relative;\"><a href=\"#preparing-the-data\" aria-label=\"preparing the data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preparing the data</h3>\n<p>You’ll get your data in a <code class=\"language-text\">zip file</code> which contains an <code class=\"language-text\">inbox</code> folder, this folder would contain all the conversations you have with all of your contacts organized on folders each folder is prefixed by the username of the contact.</p>\n<p>Each conversation folder contains atleast a <code class=\"language-text\">message_1.json</code> along with other folders such as <code class=\"language-text\">gifs</code>, that’s of no interest to us in this case.</p>\n<p>The <code class=\"language-text\">message_1.json</code> file has a very simple structure and it’s as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"participants\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Simhi\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Amine Hakkou\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"messages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"sender_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Simhi\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"timestamp_ms\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1499810593070</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Afeen!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Generic\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Simhi\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"is_still_participant\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"thread_type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Regular\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"thread_path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"inbox/Simhi_blahblah\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In this article I’ll simplify it a little as we’re not going to feed it all the data from all of the conversations,\nWe’ll do it with one, however if you feel like feeding it all the data then you could tweak the code a little for that.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">readConversation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>\n        path<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/message_1.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> encoding<span class=\"token operator\">:</span> <span class=\"token string\">'utf8'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We’ll also need to clean the messages as it might contain non text payloads, such as <code class=\"language-text\">gifs</code>, <code class=\"language-text\">videos</code>..</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">filterMessagesWithContent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> messages<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span> <span class=\"token operator\">=></span> message<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you skimmed over your messages you’ll notice that it’s sorted from new to old, we’ll need to fix that.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">reverseMessagesOrder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> messages<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Also there is this little thing, where you or the other party of the conversation send multiple consecutive texts, for the sake of simplicity we could group them in one message.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">groupConsecutiveMessages</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">let</span> previousMessage <span class=\"token operator\">=</span> messages<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> messages<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> messages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span>sender_name <span class=\"token operator\">===</span> previousMessage<span class=\"token punctuation\">.</span>sender_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            previousMessage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>previousMessage<span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> content<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>previousMessage<span class=\"token punctuation\">)</span>\n            previousMessage <span class=\"token operator\">=</span> message\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// handle last element</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>previousMessage<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We’ll need to cleanup the <code class=\"language-text\">JSON</code>, we’ll be losing information sure, we won’t need the rest anyway.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">messagesContent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> messages<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token operator\">=></span> m<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And finally write the result back to the fs.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">writeMessages</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token punctuation\">,</span> messages</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeFileSync</span><span class=\"token punctuation\">(</span>\n        path<span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>messages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Putting it all together would look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token string\">'path-to-your-data/inbox/Simhi_blahblah'</span>\n    <span class=\"token keyword\">const</span> conversation <span class=\"token operator\">=</span> <span class=\"token function\">readConversation</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token function\">messagesContent</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">groupConsecutiveMessages</span><span class=\"token punctuation\">(</span>\n                <span class=\"token function\">reverseMessagesOrder</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token function\">filterMessagesWithContent</span><span class=\"token punctuation\">(</span>\n                        conversation<span class=\"token punctuation\">.</span>messages\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n     <span class=\"token function\">writeMessages</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/messages.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> messages<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now to turn this on we’ll have to do something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node transform.js</code></pre></div>\n<h2 id=\"the-chatbot\" style=\"position:relative;\"><a href=\"#the-chatbot\" aria-label=\"the chatbot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Chatbot</h2>\n<p>Alright now that we got the data ready, we’ll need to train our AI, you can find a lot of conversational engines around, such as <a href=\"https://chatterbot.readthedocs.io/en/stable/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">chatterbot</code></a> and <a href=\"https://rasa.com/docs/getting-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">rasa</code></a>.</p>\n<p>We’ll go with <code class=\"language-text\">chatterbot</code> because it has a simpler and straightforward API.</p>\n<h3 id=\"prequisites\" style=\"position:relative;\"><a href=\"#prequisites\" aria-label=\"prequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prequisites</h3>\n<p>You’ll need to have python3 installed on your machine.</p>\n<h3 id=\"install\" style=\"position:relative;\"><a href=\"#install\" aria-label=\"install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip3 <span class=\"token function\">install</span> chatterbot chatterbot-corpus</code></pre></div>\n<h3 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h3>\n<p>the code below reads the json file we wrote using our transformer script, trains the model and answer’s to the messages it receives from the <code class=\"language-text\">stdin</code>.</p>\n<p>there’s a lot you could improve on it, I kept it simple so I used chatterbot’s <code class=\"language-text\">ListTrainer</code> with no additional configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">from</span> chatterbot <span class=\"token keyword\">import</span> ChatBot\n<span class=\"token keyword\">from</span> chatterbot<span class=\"token punctuation\">.</span>trainers <span class=\"token keyword\">import</span> ListTrainer\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'messages.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    conversation <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n\nchatbot <span class=\"token operator\">=</span> ChatBot<span class=\"token punctuation\">(</span><span class=\"token string\">'Amine'</span><span class=\"token punctuation\">)</span>\n\ntrainer <span class=\"token operator\">=</span> ListTrainer<span class=\"token punctuation\">(</span>chatbot<span class=\"token punctuation\">)</span>\n\ntrainer<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span>conversation<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'>'</span><span class=\"token punctuation\">)</span>\n    response <span class=\"token operator\">=</span> chatbot<span class=\"token punctuation\">.</span>get_response<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You:'</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Amine:'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h3>\n<p>Now all you gotta do is run the chatbot.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python3 chatbot.py</code></pre></div>\n<p><a href=\"https://asciinema.org/a/c9p0294J8AYK2v5SCmdRE69LC\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://asciinema.org/a/c9p0294J8AYK2v5SCmdRE69LC.svg\" alt=\"asciicast\"></a></p>","fields":{"slug":"/posts/make-a-chatbot-that-speaks-like-you","tagSlugs":["/tag/javascript/","/tag/python/"]},"frontmatter":{"date":"2019-12-04T22:40:32.169Z","description":"We'll write a chatbot that'll learn from your texts!","tags":["javascript","python"],"title":"Make a chatbot that speaks like you","socialImage":"/media/image-3.jpg"}}},"pageContext":{"slug":"/posts/make-a-chatbot-that-speaks-like-you"}}}